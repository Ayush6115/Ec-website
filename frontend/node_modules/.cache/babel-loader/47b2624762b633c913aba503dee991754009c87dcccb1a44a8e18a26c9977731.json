{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sakura-Ecommerce\\\\frontend\\\\src\\\\admin\\\\pages\\\\UpdateProduct.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/UpdateProduct.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProduct = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    async function fetchProducts() {\n      try {\n        const res = await fetch('http://localhost:5000/api/products');\n        if (!res.ok) throw new Error('Failed to fetch products');\n        const data = await res.json();\n        setProducts(data.response || []);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchProducts();\n  }, []);\n  const handleEditClick = productId => {\n    console.log('Edit product with ID:', productId);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading products...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      color: 'red'\n    },\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-product-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-grid\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 34\n          }, this), \" $\", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditClick(product._id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, product._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateProduct, \"y7+sQ4EOFUb33DGpdrz/8zFmpYg=\");\n_c = UpdateProduct;\nexport default UpdateProduct;\nvar _c;\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UpdateProduct","_s","products","setProducts","loading","setLoading","error","setError","fetchProducts","res","fetch","ok","Error","data","json","response","err","message","handleEditClick","productId","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","className","map","product","name","description","price","onClick","_id","_c","$RefreshReg$"],"sources":["E:/Sakura-Ecommerce/frontend/src/admin/pages/UpdateProduct.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../styles/UpdateProduct.css'\r\n\r\nconst UpdateProduct = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function fetchProducts() {\r\n      try {\r\n        const res = await fetch('http://localhost:5000/api/products');\r\n        if (!res.ok) throw new Error('Failed to fetch products');\r\n        const data = await res.json();\r\n        setProducts(data.response || []);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const handleEditClick = (productId) => {\r\n    console.log('Edit product with ID:', productId);\r\n  };\r\n\r\n  if (loading) return <p>Loading products...</p>;\r\n  if (error) return <p style={{ color: 'red' }}>Error: {error}</p>;\r\n\r\n  return (\r\n    <div className=\"update-product-container\">\r\n      <h2>All Products</h2>\r\n      <div className=\"product-grid\">\r\n        {products.map(product => (\r\n          <div key={product._id} className=\"product-card\">\r\n            <h3>{product.name}</h3>\r\n            <p>{product.description}</p>\r\n            <p className=\"price\"><b>Price:</b> ${product.price}</p>\r\n            <button onClick={() => handleEditClick(product._id)}>Edit</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateProduct;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
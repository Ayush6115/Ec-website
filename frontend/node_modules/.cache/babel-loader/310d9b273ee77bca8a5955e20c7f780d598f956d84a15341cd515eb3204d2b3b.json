{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sakura-Ecommerce\\\\frontend\\\\src\\\\pages\\\\SignupPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport '../styles/SignupPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupPage = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMsg, setErrorMsg] = useState('');\n  const [successMsg, setSuccessMsg] = useState('');\n  const navigate = useNavigate();\n  const handleSignup = async e => {\n    e.preventDefault();\n    try {\n      const response = await api.post('/signup', {\n        name,\n        phone,\n        email,\n        password\n      });\n      const {\n        token\n      } = response.data;\n\n      // Store JWT token\n      localStorage.setItem('token', token);\n      setSuccessMsg('Signup successful! Redirecting to Login Page...');\n      setErrorMsg('');\n      setTimeout(() => {\n        navigate('/login');\n      }, 1500);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.message) {\n        setErrorMsg(error.response.data.message);\n      } else {\n        setErrorMsg('Signup failed. Please try again.');\n      }\n      setSuccessMsg('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"signup-form\",\n      onSubmit: handleSignup,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 22\n      }, this), successMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: successMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"Enter your name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true,\n        autoComplete: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phone\",\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        id: \"phone\",\n        placeholder: \"Enter your phone number\",\n        value: phone,\n        onChange: e => setPhone(e.target.value),\n        required: true,\n        autoComplete: \"tel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        autoComplete: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        placeholder: \"Enter your password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        autoComplete: \"new-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"signup-button\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"login-text\",\n      children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        className: \"login-link\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(SignupPage, \"C79q+6lG388R3/fhXbvhlPpypbY=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","useNavigate","api","jsxDEV","_jsxDEV","SignupPage","_s","name","setName","phone","setPhone","email","setEmail","password","setPassword","errorMsg","setErrorMsg","successMsg","setSuccessMsg","navigate","handleSignup","e","preventDefault","response","post","token","data","localStorage","setItem","setTimeout","error","_error$response","_error$response$data","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","placeholder","value","onChange","target","required","autoComplete","href","_c","$RefreshReg$"],"sources":["E:/Sakura-Ecommerce/frontend/src/pages/SignupPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../services/api'; \r\nimport '../styles/SignupPage.css';\r\n\r\nconst SignupPage = () => {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n  const [successMsg, setSuccessMsg] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSignup = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await api.post('/signup', {\r\n        name,\r\n        phone,\r\n        email,\r\n        password,\r\n      });\r\n\r\n      const { token } = response.data;\r\n\r\n      // Store JWT token\r\n      localStorage.setItem('token', token);\r\n\r\n      setSuccessMsg('Signup successful! Redirecting to Login Page...');\r\n      setErrorMsg('');\r\n\r\n      setTimeout(() => {\r\n        navigate('/login');\r\n      }, 1500);\r\n    } catch (error) {\r\n      if (error.response?.data?.message) {\r\n        setErrorMsg(error.response.data.message);\r\n      } else {\r\n        setErrorMsg('Signup failed. Please try again.');\r\n      }\r\n      setSuccessMsg('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"signup-container\">\r\n      <form className=\"signup-form\" onSubmit={handleSignup}>\r\n        <h2>Sign Up</h2>\r\n\r\n        {errorMsg && <p className=\"error-message\">{errorMsg}</p>}\r\n        {successMsg && <p className=\"success-message\">{successMsg}</p>}\r\n\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          placeholder=\"Enter your name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n          autoComplete=\"name\"\r\n        />\r\n\r\n        <label htmlFor=\"phone\">Phone</label>\r\n        <input\r\n          type=\"tel\"\r\n          id=\"phone\"\r\n          placeholder=\"Enter your phone number\"\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n          required\r\n          autoComplete=\"tel\"\r\n        />\r\n\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          placeholder=\"Enter your email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n          autoComplete=\"email\"\r\n        />\r\n\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          placeholder=\"Enter your password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n          autoComplete=\"new-password\"\r\n        />\r\n\r\n        <button type=\"submit\" className=\"signup-button\">\r\n          Sign Up\r\n        </button>\r\n      </form>\r\n\r\n      <p className=\"login-text\">\r\n        Already have an account?{' '}\r\n        <a href=\"/login\" className=\"login-link\">\r\n          Login\r\n        </a>\r\n      </p>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SignupPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
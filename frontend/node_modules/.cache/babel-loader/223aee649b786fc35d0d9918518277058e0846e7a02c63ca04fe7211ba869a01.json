{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\Desktop\\\\project_MERN\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoginPage, setIsLoginPage] = useState(true);\n  const [user, setUser] = useState(null);\n\n  // Send signup data to backend\n  const handleSignup = async ({\n    name,\n    phone,\n    email,\n    password\n  }) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          phone,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Signup successful! Now you can login.\");\n        setIsLoginPage(true);\n      } else {\n        alert(\"Signup failed: \" + (data.message || \"Unknown error\"));\n      }\n    } catch (error) {\n      alert(\"Error connecting to server\");\n      console.error(error);\n    }\n  };\n\n  // Send login data to backend to verify user\n  const handleLogin = async (email, password) => {\n    try {\n      // You will need to implement a login endpoint in backend for this to work\n      const response = await fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setUser({\n          email: data.email\n        }); // or data.user based on backend response\n        alert(\"Login successful!\");\n        return true;\n      } else {\n        alert(\"Login failed: \" + (data.message || \"Invalid credentials\"));\n        return false;\n      }\n    } catch (error) {\n      alert(\"Error connecting to server\");\n      console.error(error);\n      return false;\n    }\n  };\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"50px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", user.email, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setUser(null),\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoginPage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-toggle\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsLoginPage(false),\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Signup, {\n        onSignup: handleSignup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-toggle\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsLoginPage(true),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"He4pXT5e/GDTa6ahSWsnlffLmaE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Login","Signup","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoginPage","setIsLoginPage","user","setUser","handleSignup","name","phone","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","message","error","console","handleLogin","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onLogin","className","onSignup","_c","$RefreshReg$"],"sources":["C:/Users/ayush/Desktop/project_MERN/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\n\nfunction App() {\n  const [isLoginPage, setIsLoginPage] = useState(true);\n  const [user, setUser] = useState(null);\n\n  // Send signup data to backend\n  const handleSignup = async ({ name, phone, email, password }) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/signup\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name, phone, email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        alert(\"Signup successful! Now you can login.\");\n        setIsLoginPage(true);\n      } else {\n        alert(\"Signup failed: \" + (data.message || \"Unknown error\"));\n      }\n    } catch (error) {\n      alert(\"Error connecting to server\");\n      console.error(error);\n    }\n  };\n\n  // Send login data to backend to verify user\n  const handleLogin = async (email, password) => {\n    try {\n      // You will need to implement a login endpoint in backend for this to work\n      const response = await fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        setUser({ email: data.email }); // or data.user based on backend response\n        alert(\"Login successful!\");\n        return true;\n      } else {\n        alert(\"Login failed: \" + (data.message || \"Invalid credentials\"));\n        return false;\n      }\n    } catch (error) {\n      alert(\"Error connecting to server\");\n      console.error(error);\n      return false;\n    }\n  };\n\n  if (user) {\n    return (\n      <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n        <h2>Welcome, {user.email}!</h2>\n        <button onClick={() => setUser(null)}>Logout</button>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {isLoginPage ? (\n        <>\n          <Login onLogin={handleLogin} />\n          <div className=\"auth-toggle\">\n            <p>\n              Don't have an account?{\" \"}\n              <button onClick={() => setIsLoginPage(false)}>Signup</button>\n            </p>\n          </div>\n        </>\n      ) : (\n        <>\n          <Signup onSignup={handleSignup} />\n          <div className=\"auth-toggle\">\n            <p>\n              Already have an account?{\" \"}\n              <button onClick={() => setIsLoginPage(true)}>Login</button>\n            </p>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
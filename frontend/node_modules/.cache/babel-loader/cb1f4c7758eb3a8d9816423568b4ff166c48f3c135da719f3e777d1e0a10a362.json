{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayush\\\\Desktop\\\\project_MERN\\\\frontend\\\\src\\\\admin\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Dashboard.css';\nimport ProductList from './products/ProductList';\nimport AddProduct from './products/AddProduct';\nimport EditProduct from './products/EditProduct';\nimport OrderList from './orders/OrderList';\nimport EditOrder from './orders/EditOrder';\nimport MessageList from './messages/MessageList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // Sidebar selected main section: 'dashboard', 'products', 'orders', 'messages'\n  const [activeSection, setActiveSection] = useState('dashboard');\n\n  // Tab inside the active section\n  // Products tabs: 'list', 'add', 'edit' (for edit, you can pass id or simplify)\n  // Orders tabs: 'list', 'edit'\n  // Messages tabs: 'list'\n  const [activeTab, setActiveTab] = useState('');\n\n  // For EditProduct/EditOrder, you may want to store the id to edit\n  // For simplicity, here I'll just demonstrate switching tabs,\n  // you can extend it later to select an ID from lists.\n\n  // When changing section, reset active tab appropriately\n  const handleSectionChange = section => {\n    setActiveSection(section);\n    if (section === 'dashboard') setActiveTab('');else if (section === 'products') setActiveTab('list');else if (section === 'orders') setActiveTab('list');else if (section === 'messages') setActiveTab('list');\n  };\n\n  // Render top tabs depending on activeSection\n  const renderTabs = () => {\n    switch (activeSection) {\n      case 'products':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTab === 'list' ? 'active-tab' : '',\n            onClick: () => setActiveTab('list'),\n            children: \"Product List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTab === 'add' ? 'active-tab' : '',\n            onClick: () => setActiveTab('add'),\n            children: \"Add Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this);\n      case 'orders':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: activeTab === 'list' ? 'active-tab' : '',\n            onClick: () => setActiveTab('list'),\n            children: \"All Orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this);\n      case 'messages':\n        return null;\n      // no tabs needed, just show list\n      default:\n        return null;\n    }\n  };\n\n  // Render content based on activeSection and activeTab\n  const renderContent = () => {\n    if (activeSection === 'dashboard') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dashboard Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome to Admin Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this);\n    }\n    if (activeSection === 'products') {\n      if (activeTab === 'list') return /*#__PURE__*/_jsxDEV(ProductList, {\n        onEdit: id => {\n          setActiveTab('edit'); /* handle id */\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 40\n      }, this);\n      if (activeTab === 'add') return /*#__PURE__*/_jsxDEV(AddProduct, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 39\n      }, this);\n      if (activeTab === 'edit') return /*#__PURE__*/_jsxDEV(EditProduct /* pass id here */, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 40\n      }, this);\n    }\n    if (activeSection === 'orders') {\n      if (activeTab === 'list') return /*#__PURE__*/_jsxDEV(OrderList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 40\n      }, this);\n      if (activeTab === 'edit') return /*#__PURE__*/_jsxDEV(EditOrder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 40\n      }, this);\n    }\n    if (activeSection === 'messages') {\n      return /*#__PURE__*/_jsxDEV(MessageList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 14\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"dashboard-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeSection === 'dashboard' ? 'active' : '',\n          onClick: () => handleSectionChange('dashboard'),\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeSection === 'products' ? 'active' : '',\n          onClick: () => handleSectionChange('products'),\n          children: \"Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeSection === 'orders' ? 'active' : '',\n          onClick: () => handleSectionChange('orders'),\n          children: \"Orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeSection === 'messages' ? 'active' : '',\n          onClick: () => handleSectionChange('messages'),\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-main\",\n      children: [renderTabs(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-content\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"q/oIQO/8TO1vNbhFsz4w2bHN10c=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","ProductList","AddProduct","EditProduct","OrderList","EditOrder","MessageList","jsxDEV","_jsxDEV","Dashboard","_s","activeSection","setActiveSection","activeTab","setActiveTab","handleSectionChange","section","renderTabs","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","renderContent","onEdit","id","_c","$RefreshReg$"],"sources":["C:/Users/ayush/Desktop/project_MERN/frontend/src/admin/pages/Dashboard.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Dashboard.css';\r\n\r\nimport ProductList from './products/ProductList';\r\nimport AddProduct from './products/AddProduct';\r\nimport EditProduct from './products/EditProduct';\r\n\r\nimport OrderList from './orders/OrderList';\r\nimport EditOrder from './orders/EditOrder';\r\n\r\nimport MessageList from './messages/MessageList';\r\n\r\nconst Dashboard = () => {\r\n  // Sidebar selected main section: 'dashboard', 'products', 'orders', 'messages'\r\n  const [activeSection, setActiveSection] = useState('dashboard');\r\n\r\n  // Tab inside the active section\r\n  // Products tabs: 'list', 'add', 'edit' (for edit, you can pass id or simplify)\r\n  // Orders tabs: 'list', 'edit'\r\n  // Messages tabs: 'list'\r\n  const [activeTab, setActiveTab] = useState(''); \r\n\r\n  // For EditProduct/EditOrder, you may want to store the id to edit\r\n  // For simplicity, here I'll just demonstrate switching tabs,\r\n  // you can extend it later to select an ID from lists.\r\n  \r\n  // When changing section, reset active tab appropriately\r\n  const handleSectionChange = (section) => {\r\n    setActiveSection(section);\r\n    if(section === 'dashboard') setActiveTab('');\r\n    else if(section === 'products') setActiveTab('list'); \r\n    else if(section === 'orders') setActiveTab('list');\r\n    else if(section === 'messages') setActiveTab('list');\r\n  };\r\n\r\n  // Render top tabs depending on activeSection\r\n  const renderTabs = () => {\r\n    switch (activeSection) {\r\n      case 'products':\r\n        return (\r\n          <div className=\"tabs\">\r\n            <button \r\n              className={activeTab === 'list' ? 'active-tab' : ''}\r\n              onClick={() => setActiveTab('list')}\r\n            >\r\n              Product List\r\n            </button>\r\n            <button \r\n              className={activeTab === 'add' ? 'active-tab' : ''}\r\n              onClick={() => setActiveTab('add')}\r\n            >\r\n              Add Product\r\n            </button>\r\n            {/* For edit, you can later open by clicking edit button in list */}\r\n          </div>\r\n        );\r\n      case 'orders':\r\n        return (\r\n          <div className=\"tabs\">\r\n            <button \r\n              className={activeTab === 'list' ? 'active-tab' : ''}\r\n              onClick={() => setActiveTab('list')}\r\n            >\r\n              All Orders\r\n            </button>\r\n            {/* For update order, you may add dynamic selection from list */}\r\n          </div>\r\n        );\r\n      case 'messages':\r\n        return null; // no tabs needed, just show list\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Render content based on activeSection and activeTab\r\n  const renderContent = () => {\r\n    if (activeSection === 'dashboard') {\r\n      return (\r\n        <div>\r\n          <h1>Dashboard Home</h1>\r\n          <p>Welcome to Admin Panel</p>\r\n        </div>\r\n      );\r\n    }\r\n    if (activeSection === 'products') {\r\n      if (activeTab === 'list') return <ProductList onEdit={(id) => {setActiveTab('edit'); /* handle id */}} />;\r\n      if (activeTab === 'add') return <AddProduct />;\r\n      if (activeTab === 'edit') return <EditProduct /* pass id here */ />;\r\n    }\r\n    if (activeSection === 'orders') {\r\n      if (activeTab === 'list') return <OrderList />;\r\n      if (activeTab === 'edit') return <EditOrder />;\r\n    }\r\n    if (activeSection === 'messages') {\r\n      return <MessageList />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <aside className=\"dashboard-sidebar\">\r\n        <h2>Admin Panel</h2>\r\n        <nav>\r\n          <button\r\n            className={activeSection === 'dashboard' ? 'active' : ''}\r\n            onClick={() => handleSectionChange('dashboard')}\r\n          >\r\n            Dashboard\r\n          </button>\r\n          <button\r\n            className={activeSection === 'products' ? 'active' : ''}\r\n            onClick={() => handleSectionChange('products')}\r\n          >\r\n            Products\r\n          </button>\r\n          <button\r\n            className={activeSection === 'orders' ? 'active' : ''}\r\n            onClick={() => handleSectionChange('orders')}\r\n          >\r\n            Orders\r\n          </button>\r\n          <button\r\n            className={activeSection === 'messages' ? 'active' : ''}\r\n            onClick={() => handleSectionChange('messages')}\r\n          >\r\n            Messages\r\n          </button>\r\n        </nav>\r\n      </aside>\r\n\r\n      <main className=\"dashboard-main\">\r\n        {/* Tabs on top */}\r\n        {renderTabs()}\r\n\r\n        {/* Content area */}\r\n        <div className=\"dashboard-content\">\r\n          {renderContent()}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}